plugins {
    id "com.android.library"
    id "digital.wup.android-maven-publish" version "3.6.2"
}

ext {
    customVersionCode = 1
    customVersionName = '1.0.0'
    customGroupId = 'com.ikecin.sdk'
    customArtifactId = 'demo' // 必须保证artifactId唯一，AndroidManifest中的package值也要唯一，建议跟artifactID保持一致
}

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode customVersionCode
        versionName customVersionName
        consumerProguardFiles 'consumer-proguard-rules.pro'
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', 'consumer-proguard-rules.pro'
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            zipAlignEnabled true
        }
        debug {
            minifyEnabled false
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
            zipAlignEnabled false
            ndk {
                abiFilters "armeabi-v7a" //debug模式只使用特定的abi可以加快构建速度
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
    options {
        encoding 'utf-8'
        charSet 'utf-8'
    }
    exclude '**/BuildConfig.java'
    exclude '**/R.java'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}


/**使用命令 gradlew publish 即可发布到本地maven*/
publishing {
    publications {
        mavenAar(MavenPublication) {
            groupId customGroupId
            artifactId customArtifactId
            version customVersionName
            artifact sourcesJar
            artifact javadocJar
            from components.android
        }
    }
    repositories {
        maven {
            url = projectDir.toPath().resolve('build/maven').toUri()
        }
    }
}
